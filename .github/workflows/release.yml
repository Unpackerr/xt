name: build-and-release
on:
  push:
    tags:
      - v*

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_SIGNING_KEY }}
      - name: "Create GPG_SIGNING_KEY file"
        run: "echo '${{ secrets.GPG_SIGNING_KEY }}' > /tmp/key.gpg"
      - uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
      - uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Use a fine grained PAT with Contents: R/W on golift/homebrew-mugs.
          HOMEBREW_DEPLOY_KEY: ${{ secrets.HOMEBREW_DEPLOY_KEY }}
          GPG_SIGNING_KEY: /tmp/key.gpg
          GPG_SIGNING_KEY_ID: ${{ steps.import_gpg.outputs.keyid }}

  deploy-packagecloud:
    # description: "Uploads pre-built RPM and DEB packages to packagecloud.io/golift"
    if: startsWith(github.ref, 'refs/tags/v')
    needs: release
    name: Deploy Release PackageCloud
    runs-on: ubuntu-latest
    steps:
      - name: Download release files
        uses: actions/download-artifact@v4
        with:
          name: release
      - uses: golift/upload-packagecloud@v1
        with:
          userrepo: golift/pkgs
          apitoken: ${{ secrets.PACKAGECLOUD_TOKEN }}
          packages: dist/
          rpmdists: el/6
          debdists: ubuntu/focal